[{"/Users/student/Downloads/my_reactjs_calculator 2/ex00/src/index.js":"1","/Users/student/Downloads/my_reactjs_calculator 2/ex00/src/reportWebVitals.js":"2","/Users/student/Downloads/my_reactjs_calculator 2/ex00/src/App.js":"3"},{"size":535,"mtime":1674471364000,"results":"4","hashOfConfig":"5"},{"size":362,"mtime":1674471364000,"results":"6","hashOfConfig":"5"},{"size":2299,"mtime":1674471364000,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","suppressedMessages":"10","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"okxsb2",{"filePath":"11","messages":"12","suppressedMessages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},"/Users/student/Downloads/my_reactjs_calculator 2/ex00/src/index.js",[],[],"/Users/student/Downloads/my_reactjs_calculator 2/ex00/src/reportWebVitals.js",[],[],"/Users/student/Downloads/my_reactjs_calculator 2/ex00/src/App.js",["18","19","20","21","22","23","24","25","26"],[],"import React, {useState} from 'react';\nimport \"./App.css\";\n\nfunction App() {\n\n  const [calc, setCalc] = useState(\"\")\n  const [result, setResult] = useState(\"\")\n\n  const ops = ['/', '*', '+', '-', '.'];\n\n  const updateCalc = value => {\n\n    if(\n      ops.includes(value) && calc === '' ||\n      ops.includes(value) && ops.includes(calc.slice(-1)\n      )\n    ){\n      return;\n    }\n\n     setCalc(calc + value);\n\n     if(!ops.includes(value)){\n      setResult(eval(calc + value).toString())\n     }\n  }\n   \n   const createDigitls = () => {\n    const digitls = []\n\n    for(let i = 1; i < 10; i++){\n        digitls.push(\n          <button onClick={() => updateCalc(i.toString())} key={i}>{i}</button>\n        )\n    }\n\n    return digitls;\n\n  }\n\n  const calculate = () => {\n    setCalc(eval(calc).toString())\n  }\n\n  const deleteLast = () =>{\n    if(calc == ''){\n      return\n    }\n\n    const value = calc.slice(0, -1)\n\n    setCalc(value)\n  }\n\n  return (\n   <div className='App'>\n      <div className='calculator'>\n\n        <div className='display'>\n          {/* {result ? <span>({result})</span> : ''} */}\n            {calc}\n        </div>\n\n         <div className='digitls'>\n         <button onClick={() => updateCalc('1')}>1</button>\n         <button onClick={() => updateCalc('2')}>2</button>\n         <button onClick={() => updateCalc('3')}>3</button>\n         <button className='operators' onClick={() => updateCalc('+')}>+</button>\n\n         <button onClick={() => updateCalc('4')}>4</button>\n         <button onClick={() => updateCalc('5')}>5</button>\n         <button onClick={() => updateCalc('6')}>6</button>\n         <button className='operators' onClick={() => updateCalc('-')}>-</button>\n\n         <button onClick={() => updateCalc('7')}>7</button>\n         <button onClick={() => updateCalc('8')}>8</button>\n         <button onClick={() => updateCalc('9')}>9</button>\n         <button className='operators' onClick={() => updateCalc('*')}>*</button>\n\n         <button className='deleteBtn' onClick={() => deleteLast('C')}>C</button>\n         <button onClick={() => updateCalc('0')}>0</button>\n         <button onClick={calculate}>=</button>\n         <button className='operators' onClick={() => updateCalc('/')}>/</button>\n         </div>\n\n      </div>\n   </div>\n  );\n}\n\n\nexport default App;\n",{"ruleId":"27","severity":1,"message":"28","line":7,"column":10,"nodeType":"29","messageId":"30","endLine":7,"endColumn":16},{"ruleId":"31","severity":1,"message":"32","line":14,"column":27,"nodeType":"33","messageId":"34","endLine":14,"endColumn":29},{"ruleId":"31","severity":1,"message":"32","line":14,"column":42,"nodeType":"33","messageId":"34","endLine":14,"endColumn":44},{"ruleId":"31","severity":1,"message":"35","line":14,"column":42,"nodeType":"33","messageId":"34","endLine":14,"endColumn":44},{"ruleId":"31","severity":1,"message":"35","line":15,"column":27,"nodeType":"33","messageId":"34","endLine":15,"endColumn":29},{"ruleId":"36","severity":1,"message":"37","line":24,"column":17,"nodeType":"38","messageId":"39","endLine":24,"endColumn":21},{"ruleId":"27","severity":1,"message":"40","line":28,"column":10,"nodeType":"29","messageId":"30","endLine":28,"endColumn":23},{"ruleId":"36","severity":1,"message":"37","line":42,"column":13,"nodeType":"38","messageId":"39","endLine":42,"endColumn":17},{"ruleId":"41","severity":1,"message":"42","line":46,"column":13,"nodeType":"43","messageId":"39","endLine":46,"endColumn":15},"no-unused-vars","'result' is assigned a value but never used.","Identifier","unusedVar","no-mixed-operators","Unexpected mix of '&&' and '||'. Use parentheses to clarify the intended order of operations.","LogicalExpression","unexpectedMixedOperator","Unexpected mix of '||' and '&&'. Use parentheses to clarify the intended order of operations.","no-eval","eval can be harmful.","CallExpression","unexpected","'createDigitls' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression"]